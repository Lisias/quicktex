# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Package

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [ 3.7, 3.8, 3.9 ]
        os: [ macos-latest, windows-latest, ubuntu-latest ]

    steps:
      - uses: actions/checkout@v2
        with:
          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
          # recursively checkout submodules.
          submodules: 'true'

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install libomp
        if: runner.os == 'macOS'
        # openMP isnt part of core apple clang for some reason?
        run: brew install libomp

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8

      - name: Install test images
        run: git clone https://git.pileof.rocks/drewcassidy/quicktex-test-images.git tests/images

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Compile and install
        run: python -m pip install -e .[tests]

      - name: Test with nose
        run: nosetests tests -d

  build:
    needs: test
    if: github.event_name == 'push'

    runs-on: ${{ matrix.os }}
    env:
      MACOSX_DEPLOYMENT_TARGET: 10.15

    steps:
      - uses: actions/checkout@v2
        with:
          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
          # recursively checkout submodules.
          submodules: 'true'

      - name: Install libomp
        if: runner.os == 'macOS'
        # openMP isnt part of core apple clang for some reason?
        run: brew install libomp

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.11.0
        env:
          CIBW_BUILD: { cp,pp }{ 37,38,39 }-*
          CIBW_SKIP: "*-win32 *-manylinux_i686"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014

      - name: Upload wheel as artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./wheelhouse/*.whl

  publish:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          # Whether to checkout submodules: `true` to checkout submodules or `recursive` to
          # recursively checkout submodules.
          submodules: 'true'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: List artifacts
        run: ls -l dist

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine build

      - name: Build a source tarball
        run: python -m build --sdist --outdir dist/

      - name: Publish to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/